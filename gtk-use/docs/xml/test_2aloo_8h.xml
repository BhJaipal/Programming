<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="test_2aloo_8h" kind="file" language="C++">
    <compoundname>aloo.h</compoundname>
    <includes refid="widget_8h" local="yes">../builtin/widget.h</includes>
    <includedby refid="aloo_8h" local="yes">include/aloo.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/test/aloo.h</label>
        <link refid="test_2aloo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>gtk/gtk.h</label>
      </node>
      <node id="2">
        <label>../builtin/widget.h</label>
        <link refid="widget_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/test/aloo.h</label>
        <link refid="test_2aloo_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/aloo.h</label>
        <link refid="aloo_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__Test" prot="public">_Test</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="test_2aloo_8h_1ad7be07ac2f3d38ab7f62698d48cb490f" prot="public" static="no">
        <type>struct <ref refid="struct__Test" kindref="compound">_Test</ref></type>
        <definition>typedef struct _Test Test</definition>
        <argsstring></argsstring>
        <name>Test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="27" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test_2aloo_8h_1aa45ff8e3a0ccc789beb77e681aeee2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __expectInt</definition>
        <argsstring>(int expected, int actual)</argsstring>
        <name>__expectInt</name>
        <param>
          <type>int</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>int</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="9" column="5" declfile="include/test/aloo.h" declline="9" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test_2aloo_8h_1a8e5848ae1bc39b21068ac4aef6ed0447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __expectWidget</definition>
        <argsstring>(alooWidget *expected, alooWidget *actual)</argsstring>
        <name>__expectWidget</name>
        <param>
          <type><ref refid="structalooWidget" kindref="compound">alooWidget</ref> *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="structalooWidget" kindref="compound">alooWidget</ref> *</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="10" column="5" declfile="include/test/aloo.h" declline="10" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test_2aloo_8h_1ab72e20be23f0ba6ed8064ab14caa04f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int __expectGtkWidget</definition>
        <argsstring>(GtkWidget *expected, alooWidget *actual)</argsstring>
        <name>__expectGtkWidget</name>
        <param>
          <type>GtkWidget *</type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="structalooWidget" kindref="compound">alooWidget</ref> *</type>
          <declname>actual</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="11" column="5" declfile="include/test/aloo.h" declline="11" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="test_2aloo_8h_1a871aa8baeec0ffa5cbaeeae1da0ea82d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __addTest</definition>
        <argsstring>(const char *test_name, struct _Test *test, int test_res)</argsstring>
        <name>__addTest</name>
        <param>
          <type>const char *</type>
          <declname>test_name</declname>
        </param>
        <param>
          <type>struct <ref refid="struct__Test" kindref="compound">_Test</ref> *</type>
          <declname>test</declname>
        </param>
        <param>
          <type>int</type>
          <declname>test_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="12" column="6" declfile="include/test/aloo.h" declline="12" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="test_2aloo_8h_1a708c47507415a81003d70d56f191b5bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void __testRes</definition>
        <argsstring>(struct _Test *t)</argsstring>
        <name>__testRes</name>
        <param>
          <type>struct <ref refid="struct__Test" kindref="compound">_Test</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="13" column="6" declfile="include/test/aloo.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="test_2aloo_8h_1a9c95e48af7915714c15c20a7d42d47db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="test_2aloo_8h_1ad7be07ac2f3d38ab7f62698d48cb490f" kindref="member">Test</ref> *</type>
        <definition>Test* createTest</definition>
        <argsstring>(const char *name)</argsstring>
        <name>createTest</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/test/aloo.h" line="29" column="6" declfile="include/test/aloo.h" declline="29" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>TEST_ALOO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_ALOO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../builtin/widget.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>Private<sp/>Funcs<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__Test" kindref="compound">_Test</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="test_2aloo_8h_1aa45ff8e3a0ccc789beb77e681aeee2b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test_2aloo_8h_1aa45ff8e3a0ccc789beb77e681aeee2b4" kindref="member">__expectInt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actual);</highlight></codeline>
<codeline lineno="10" refid="test_2aloo_8h_1a8e5848ae1bc39b21068ac4aef6ed0447" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test_2aloo_8h_1a8e5848ae1bc39b21068ac4aef6ed0447" kindref="member">__expectWidget</ref>(<ref refid="structalooWidget" kindref="compound">alooWidget</ref><sp/>*expected,<sp/><ref refid="structalooWidget" kindref="compound">alooWidget</ref><sp/>*actual);</highlight></codeline>
<codeline lineno="11" refid="test_2aloo_8h_1ab72e20be23f0ba6ed8064ab14caa04f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test_2aloo_8h_1ab72e20be23f0ba6ed8064ab14caa04f7" kindref="member">__expectGtkWidget</ref>(GtkWidget<sp/>*expected,<sp/><ref refid="structalooWidget" kindref="compound">alooWidget</ref><sp/>*actual);</highlight></codeline>
<codeline lineno="12" refid="test_2aloo_8h_1a871aa8baeec0ffa5cbaeeae1da0ea82d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test_2aloo_8h_1a871aa8baeec0ffa5cbaeeae1da0ea82d" kindref="member">__addTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__Test" kindref="compound">_Test</ref><sp/>*test,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_res);</highlight></codeline>
<codeline lineno="13" refid="test_2aloo_8h_1a708c47507415a81003d70d56f191b5bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test_2aloo_8h_1a708c47507415a81003d70d56f191b5bf" kindref="member">__testRes</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__Test" kindref="compound">_Test</ref><sp/>*t);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/********************<sp/>Private<sp/>Types<sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="struct__Test" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__Test" kindref="compound">_Test</ref><sp/>{</highlight></codeline>
<codeline lineno="18" refid="struct__Test_1a169317fcfd89e5ef103f393c8f6efeff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="struct__Test_1a169317fcfd89e5ef103f393c8f6efeff" kindref="member">expectInt</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>actual);</highlight></codeline>
<codeline lineno="19" refid="struct__Test_1a682ccf17d21a59da2fba0661901a98e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="struct__Test_1a682ccf17d21a59da2fba0661901a98e9" kindref="member">expectWidget</ref>)(<ref refid="structalooWidget" kindref="compound">alooWidget</ref><sp/>*expected,<sp/><ref refid="structalooWidget" kindref="compound">alooWidget</ref><sp/>*actual);</highlight></codeline>
<codeline lineno="20" refid="struct__Test_1a6dbdf1c670902b0a4631d11990bdf542" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="struct__Test_1a6dbdf1c670902b0a4631d11990bdf542" kindref="member">expectGtkWidget</ref>)(GtkWidget<sp/>*expected,<sp/><ref refid="structalooWidget" kindref="compound">alooWidget</ref><sp/>*actual);</highlight></codeline>
<codeline lineno="21" refid="struct__Test_1aff6a8aaf2eee041aacf9845520ebdfec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct__Test_1aff6a8aaf2eee041aacf9845520ebdfec" kindref="member">addTest</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*test_name,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__Test" kindref="compound">_Test</ref><sp/>*test,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_res);</highlight></codeline>
<codeline lineno="22" refid="struct__Test_1a236a60726357110b4f875a298c9298d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct__Test_1a236a60726357110b4f875a298c9298d6" kindref="member">result</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__Test" kindref="compound">_Test</ref><sp/>*t);</highlight></codeline>
<codeline lineno="23" refid="struct__Test_1ad00a8e81fdf1a4fef80a806356636fa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__Test_1ad00a8e81fdf1a4fef80a806356636fa4" kindref="member">testCount</ref>;</highlight></codeline>
<codeline lineno="24" refid="struct__Test_1a3516562310dcde3f955996f7216078f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__Test_1a3516562310dcde3f955996f7216078f2" kindref="member">testPassed</ref>;</highlight></codeline>
<codeline lineno="25" refid="struct__Test_1a9dd30642d8c30ed2da31846d7dbe0abc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__Test_1a9dd30642d8c30ed2da31846d7dbe0abc" kindref="member">testFailed</ref>;</highlight></codeline>
<codeline lineno="26" refid="struct__Test_1a0bd92050f994bb94748e1e95e92449ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct__Test_1a0bd92050f994bb94748e1e95e92449ce" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="27" refid="test_2aloo_8h_1ad7be07ac2f3d38ab7f62698d48cb490f" refkind="member"><highlight class="normal">}<sp/><ref refid="test_2aloo_8h_1ad7be07ac2f3d38ab7f62698d48cb490f" kindref="member">Test</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="test_2aloo_8h_1a9c95e48af7915714c15c20a7d42d47db" refkind="member"><highlight class="normal"><ref refid="struct__Test" kindref="compound">Test</ref><sp/>*<ref refid="test_2aloo_8h_1a9c95e48af7915714c15c20a7d42d47db" kindref="member">createTest</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>TEST_ALOO_H</highlight></codeline>
    </programlisting>
    <location file="include/test/aloo.h"/>
  </compounddef>
</doxygen>
